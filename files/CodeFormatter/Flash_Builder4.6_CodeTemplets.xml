<?xml version="1.0" encoding="UTF-8" standalone="no"?><templates><template autoinsert="true" context="new_actionscript_file" deleted="false" description="新创建的 ActionScript 文件" enabled="true" id="com.adobe.flexide.as.core.filetemplates.new_actionscript_file" name="ActionScript 文件">// ActionScript file&#13;
// @author ${user}&#13;
// ${date} ${time}</template><template autoinsert="true" context="new_actionscript_class" deleted="false" description="新创建的 ActionScript 类文件" enabled="true" id="com.adobe.flexide.as.core.filetemplates.new_actionscript_class" name="ActionScript 类">${package_declaration}&#13;
{&#13;
	${import_declaration}&#13;
&#13;
	/**&#13;
	 * &#13;
	 * @author ${user}&#13;
	 * ${date} ${time}&#13;
 	 */&#13;
	${class_declaration}&#13;
	{&#13;
		${class_body}&#13;
	}&#13;
}</template><template autoinsert="true" context="new_actionscript_interface" deleted="false" description="新创建的 ActionScript 接口文件" enabled="true" id="com.adobe.flexide.as.core.filetemplates.new_actionscript_interface" name="ActionScript 接口">${package_declaration}&#13;
{&#13;
	${import_declaration}&#13;
	&#13;
	/**&#13;
	 * &#13;
	 * @author ${user}&#13;
	 * ${date} ${time}&#13;
 	 */&#13;
	${interface_declaration}&#13;
	{&#13;
		&#13;
	}&#13;
}</template><template autoinsert="true" context="new_as_skinnable_comp" deleted="false" description="新创建的 ActionScript Skinnable 组件" enabled="true" id="com.adobe.flexide.as.core.filetemplates.new_as_skinnable_comp" name="ActionScript Skinnable 组件">${package_declaration}
{
    ${comment_guidance_as_skinnnable_component_reference}
   
	${import_declaration}
	
	${comment_guidance_skinstate_help}
	
	/**
	 * 
	 * @author ${user}
	 * ${date} ${time}
 	 */
	${class_declaration}
	{
		${comment_guidance_skinpart}
		
    	${class_body}
    	
    	${comment_guidance_getCurrentSkinState}
    	override protected function getCurrentSkinState():String
    	{
    		return super.getCurrentSkinState();
    	} 
		
		${comment_guidance_partAdded}	
		override protected function partAdded(partName:String, instance:Object) : void
    	{
       		super.partAdded(partName, instance);
		}
		
		${comment_guidance_partRemoved}
		override protected function partRemoved(partName:String, instance:Object) : void
    	{
      		super.partRemoved(partName, instance);
    	}
			
	}
}</template><template autoinsert="true" context="mobile_itemrenderer" deleted="false" description="为 LabelItemRenderer 创建经过优化的 ActionScript 子类" enabled="true" id="com.adobe.flexide.as.core.filetemplates.mobile_itemrenderer" name="为手机列表自定义 ActionScript 项呈示器">${package_declaration}
{
    ${import_declaration}
	
	/**
	 * ASDoc comments for this item renderer class
	 * @author ${user}
	 * ${date} ${time}
 	 */
	${class_declaration}
	{
		${class_body}
    	
    	${comment_guidance_setData}
    	override public function set data(value:Object):void
    	{
    		super.data = value;
    		// the data has changed.  push these changes down in to the 
			// subcomponents here    		
    	} 
		
		${comment_guidance_createChildren}	
		override protected function createChildren():void
    	{
       		super.createChildren();
       		// create any additional children for your item renderer here
		}
		
		${comment_guidance_measure}
		override protected function measure():void
    	{
      		super.measure();
      		// measure all the subcomponents here and set measuredWidth, measuredHeight, 
			// measuredMinWidth, and measuredMinHeight      		
    	}
    	
    	${comment_guidance_drawBackground}
		override protected function drawBackground(unscaledWidth:Number, 
									          							unscaledHeight:Number):void
    	{
      		super.drawBackground(unscaledWidth, unscaledHeight);
      		// do any drawing for the background of the item renderer here      		
    	}
    	
    	${comment_guidance_layoutContents}
		override protected function layoutContents(unscaledWidth:Number, 
									          							unscaledHeight:Number):void
    	{
      		super.layoutContents(unscaledWidth, unscaledHeight);
      		// layout all the subcomponents here      		
    	}
			
	}
}</template><template autoinsert="true" context="new_css_file" deleted="false" description="新创建的 CSS 文件" enabled="true" id="com.adobe.flexide.css.core.filetemplates.new_css_file" name="CSS 文件">/* CSS file */
${css_namespaces}
</template><template autoinsert="true" context="new_flexunit1_testcase_class" deleted="false" description="新创建的 FlexUnit1 TestCase 类文件" enabled="true" id="com.adobe.flexbuilder.flexunit.filetemplates.new_flexunit1_testcase_class" name="FlexUnit1 TestCase 类">${package_declaration}
{
    ${import_declaration}
    ${class_declaration}
    {
      	public function ${class_name}(methodName:String=null)
      	{
			super(methodName);
		}
			
        override public function setUp():void
        {
             super.setUp();
        }

        override public function tearDown():void
        {
              super.tearDown();
        }
        
        ${test_method_stubs}
     }
}</template><template autoinsert="true" context="new_flexunit1_testsuite_class" deleted="false" description="新创建的 FlexUnit1 TestSuite 类文件" enabled="true" id="com.adobe.flexbuilder.flexunit.filetemplates.new_flexunit1_testsuite_class" name="FlexUnit1 TestSuite 类">${package_declaration}
{
	${import_declaration}
	${class_declaration}
	{
		${class_body}
	}
}</template><template autoinsert="true" context="new_flexunit4_testcase_class" deleted="false" description="新创建的 FlexUnit4 TestCase 类文件" enabled="true" id="com.adobe.flexbuilder.flexunit.filetemplates.new_flexunit4_testcase_class" name="FlexUnit4 TestCase 类">${package_declaration}
{
    ${import_declaration}
    ${class_declaration}
    {		
        [Before]
	    public function setUp():void
        {
	    }
        
        [After]
        public function tearDown():void
        {
        }
        
        [BeforeClass]
	    public static function setUpBeforeClass():void
	    {
        }
        
        [AfterClass]
	    public static function tearDownAfterClass():void
	    {
        }
        
        ${test_method_stubs}
     }
}</template><template autoinsert="true" context="new_flexunit4_testsuite_class" deleted="false" description="新创建的 FlexUnit4 TestSuite 类文件" enabled="true" id="com.adobe.flexbuilder.flexunit.filetemplates.new_flexunit4_testsuite_class" name="FlexUnit4 TestSuite 类">${package_declaration}
{
	${import_declaration}
	[Suite]
	[RunWith("org.flexunit.runners.Suite")]
	${class_declaration}
	{
		${class_body}
	}
}</template><template autoinsert="true" context="new_mxml_web_application" deleted="false" description="新创建的 MXML Web 应用程序文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_mxml_web_application" name="MXML Web 应用程序">${xml_tag}&#13;
&lt;${application} ${xmlns}&#13;
				${wizard_attributes}${min_size}&gt;	&#13;
	${wizard_tags}&#13;
	${declarations}&#13;
&lt;/${application}&gt;&#13;
</template><template autoinsert="true" context="new_mxml_desktop_application" deleted="false" description="新创建的 MXML 桌面应用程序文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_mxml_desktop_application" name="MXML 桌面应用程序">${xml_tag}
&lt;${application} ${xmlns}
				${wizard_attributes}&gt;
	${wizard_tags}
	${declarations}
&lt;/${application}&gt;
</template><template autoinsert="true" context="new_mxml_mobile_application" deleted="false" description="新创建的 MXML ViewNavigator 应用程序文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_mxml_mobile_application" name="MXML ViewNavigator 应用程序">${xml_tag}
&lt;${application} ${xmlns}
				${wizard_attributes}&gt;
	${wizard_tags}
	${declarations}
&lt;/${application}&gt;
</template><template autoinsert="true" context="new_mxml_flashcatalyst_web_application" deleted="false" description="新创建的与 MXML Flash Catalyst 兼容的 Web 应用程序文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_mxml_flashcatalyst_web_application" name="与 MXML Flash Catalyst 兼容的 Web 应用程序">${xml_tag}
&lt;${application} ${xmlns}
				${wizard_attributes}
				${fc_min_size}&gt;
	${wizard_tags}
	${declarations}
&lt;/${application}&gt;
</template><template autoinsert="true" context="new_mxml_component" deleted="false" description="新创建的 MXML 组件文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_mxml_component" name="MXML 组件">${xml_tag}
&lt;${component} ${xmlns}
			  ${wizard_attributes}&gt;
	${wizard_tags}
	${declarations}
&lt;/${component}&gt;
</template><template autoinsert="true" context="new_mxml_module" deleted="false" description="新创建的 MXML MX 模块文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_mxml_module" name="MXML MX 模块">${xml_tag}
&lt;${module} ${xmlns}
		   ${wizard_attributes}&gt;
	${wizard_tags}
	${declarations}
&lt;/${module}&gt;
</template><template autoinsert="true" context="new_spark_mxml_module" deleted="false" description="新创建的 MXML Spark 模块文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_spark_mxml_module" name="MXML Spark 模块">${xml_tag}
&lt;${module} ${xmlns}
		   ${wizard_attributes}&gt;
	${wizard_tags}
	${declarations}
&lt;/${module}&gt;
</template><template autoinsert="true" context="new_mxml_skin" deleted="false" description="新创建的空 MXML 外观文件" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.new_mxml_skin" name="MXML 外观">${xml_tag}
&lt;${skin} ${xmlns}
		 ${wizard_attributes}&gt;
	${wizard_tags}
&lt;/${skin}&gt;
</template><template autoinsert="true" context="spark_itemrenderer" deleted="false" description="所有 Spark 组件的项呈示器" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.spark_itemrenderer" name="Spark 组件的项呈示器">${xml_tag}
&lt;s:ItemRenderer ${xmlns} 
				autoDrawBackground="true"&gt;
	
	&lt;s:Label text="{data}"/&gt;
	
&lt;/s:ItemRenderer&gt;
</template><template autoinsert="true" context="spark_dg_itemrenderer" deleted="false" description="Spark DataGrid 的项呈示器" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.spark_dg_itemrenderer" name="Spark DataGrid 的项呈示器">${xml_tag}
&lt;s:GridItemRenderer ${xmlns}
					clipAndEnableScrolling="true"&gt;

	&lt;fx:Script&gt;
		&lt;![CDATA[

			override public function prepare(hasBeenRecycled:Boolean):void {
				lblData.text = data[column.dataField]
			}

		]]&gt;
	&lt;/fx:Script&gt;
	
	&lt;s:Label id="lblData"
			 top="9"
			 left="7"/&gt;
    
&lt;/s:GridItemRenderer&gt;
</template><template autoinsert="true" context="halo_adg_itemrenderer" deleted="false" description="MX AdvancedDataGrid 的项呈示器" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.halo_adg_itemrenderer" name="MX AdvancedDataGrid 的项呈示器">${xml_tag}
&lt;s:MXAdvancedDataGridItemRenderer ${xmlns} 
								  focusEnabled="true"&gt;
    &lt;s:Label id="lblData"
    		 top="0"
    		 left="0"
    		 right="0"
    		 bottom="0"
    		 text="{listData.label}"/&gt;
&lt;/s:MXAdvancedDataGridItemRenderer&gt;
</template><template autoinsert="true" context="halo_dg_itemrenderer" deleted="false" description="MX DataGrid 的项呈示器" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.halo_dg_itemrenderer" name="MX DataGrid 的项呈示器">${xml_tag}
&lt;s:MXDataGridItemRenderer ${xmlns} 
						  focusEnabled="true"&gt;
    &lt;s:Label id="lblData"
    		 top="0"
    		 left="0"
    		 right="0"
    		 bottom="0"
    		 text="{dataGridListData.label}"/&gt;
&lt;/s:MXDataGridItemRenderer&gt;
</template><template autoinsert="true" context="halo_tree_itemrenderer" deleted="false" description="MX Tree 的项呈示器" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.halo_tree_itemrenderer" name="MX Tree 的项呈示器">${xml_tag}
&lt;s:MXTreeItemRenderer ${xmlns}&gt;

	&lt;s:states&gt;
		&lt;s:State name="normal" /&gt;            
		&lt;s:State name="hovered" /&gt;
		&lt;s:State name="selected" /&gt;
	&lt;/s:states&gt;
	
	&lt;s:HGroup left="0"
			  right="0"
			  top="0"
			  bottom="0"
			  verticalAlign="middle"&gt;
		&lt;s:Rect id="indentationSpacer"
				width="{treeListData.indent}"
				percentHeight="100"
				alpha="0"&gt;
			&lt;s:fill&gt;
				&lt;s:SolidColor color="0xFFFFFF"/&gt;
			&lt;/s:fill&gt;
		&lt;/s:Rect&gt;
		&lt;s:Group id="disclosureGroup"&gt;
			&lt;s:BitmapImage source="{treeListData.disclosureIcon}"
						   visible="{treeListData.hasChildren}" /&gt;
		&lt;/s:Group&gt;
		&lt;s:BitmapImage source="{treeListData.icon}" /&gt;
		&lt;s:Label id="labelField"
				 text="{treeListData.label}"
				 paddingTop="2"/&gt;
	&lt;/s:HGroup&gt;
	
&lt;/s:MXTreeItemRenderer&gt;
</template><template autoinsert="true" context="mobile_icon_itemrenderer" deleted="false" description="为手机 IconItemRenderer 创建 MXML" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.mobile_icon_itemrenderer" name="手机列表的图标项呈示器">${xml_tag}
&lt;s:IconItemRenderer ${xmlns}
					${wizard_attributes}&gt;
&lt;/s:IconItemRenderer&gt;
</template><template autoinsert="true" context="mobile_icon_itemrenderer" deleted="false" description="为手机 IconItemRenderer 创建 MXML" enabled="true" id="com.adobe.flexide.mxml.core.filetemplates.multi_image_mobile_icon_itemrenderer" name="具有多个图像源的图标项呈示器">${xml_tag}&#13;
&lt;s:IconItemRenderer ${xmlns}&#13;
					${wizard_attributes}&gt;&#13;
	&lt;s:decorator&gt;&#13;
		&lt;s:MultiDPIBitmapSource ${tag_attributes}/&gt;&#13;
	&lt;/s:decorator&gt;&#13;
&lt;/s:IconItemRenderer&gt;&#13;
</template></templates>