
<!--
//========================================================================================
//Copyright © 2012, Adobe Systems Incorporated
//All rights reserved.
//	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//•	Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
//	•	Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
//		THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//========================================================================================
-->
<TypeInformation xsi:noNamespaceSchemaLocation="ClassesDefintions.xsd" Priority="0" PackageName="TEA" Load="true" id="Flex" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<RecordSuppression>
		<ActiveX ProgID="ShockwaveFlash.ShockwaveFlash"/>
		<ActiveX ProgID="ShockwaveFlash.ShockwaveFlash.8.5"/>
		<Window WindowClass="MacromediaFlashPlayerActiveX"/>
	</RecordSuppression>
	<ListOfValues Name="FlexKeyModifierValues">
		<EnumValue Label="None" Name="" RealValue=""/>
		<EnumValue Label="Ctrl" Name="flexControl" RealValue="1"/>
		<EnumValue Label="Shift" Name="flexShift" RealValue="2"/>
		<EnumValue Label="Alt" Name="flexAlt" RealValue="4"/>
		<EnumValue Label="Ctrl-Shift" Name="flexControlShift" RealValue="3"/>
		<EnumValue Label="Ctrl-Alt" Name="flexControlAlt" RealValue="5"/>
		<EnumValue Label="Shift-Alt" Name="flexShiftAlt" RealValue="6"/>
		<EnumValue Label="Ctrl-Shift-Alt" Name="flexControlShiftAlt" RealValue="7"/>
	</ListOfValues>
	<ListOfValues Name="FlexScrollDetailValues">
		<EnumValue Label="None" Name="" RealValue=""/>
		<EnumValue Label="AtBottom" Name="flexAtBottom" RealValue="1"/>
		<EnumValue Label="AtLeft" Name="flexAtLeft" RealValue="2"/>
		<EnumValue Label="AtRight" Name="flexAtRight" RealValue="3"/>
		<EnumValue Label="AtTop" Name="flexAtTop" RealValue="4"/>
		<EnumValue Label="LineDown" Name="flexLineDown" RealValue="5"/>
		<EnumValue Label="LineLeft" Name="flexLineLeft" RealValue="6"/>
		<EnumValue Label="LineRight" Name="flexLineRight" RealValue="7"/>
		<EnumValue Label="LineUp" Name="flexLineUp" RealValue="8"/>
		<EnumValue Label="PageDown" Name="flexPageDown" RealValue="9"/>
		<EnumValue Label="PageLeft" Name="flexPageLeft" RealValue="10"/>
		<EnumValue Label="PageRight" Name="flexPageRight" RealValue="11"/>
		<EnumValue Label="PageUp" Name="flexPageUp" RealValue="12"/>
		<EnumValue Label="ThumbPosition" Name="flexThumbPosition" RealValue="13"/>
		<EnumValue Label="ThumbTrack" Name="flexThumbTrack" RealValue="14"/>
	</ListOfValues>

	<ListOfValues Name="FlexScrollDirectionValues">
		<EnumValue Label="ScrollHorizontal" Name="flexScrollHorizontal" RealValue="1"/>
		<EnumValue Label="ScrollVertical" Name="flexScrollVertical" RealValue="2"/>
	</ListOfValues>
	<ListOfValues Name="FlexTriggerEventValues">
		<EnumValue Label="Mouse" Name="flexMouse" RealValue="1"/>
		<EnumValue Label="Keyboard" Name="flexKeyboard" RealValue="2"/>
	</ListOfValues>




	<ClassInfo Name="FlexContainer" GenericTypeID="frame" Extends="FlexObject" SupportsTabularData="true">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="237"/>
		<Description>FlexContainer</Description>
		<Implementation Class="mx.core::Container"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="DragCancel" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragComplete"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when a drag operation is cancelled.</Description>
			</Operation>
			<Operation Name="DragDrop" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragDrop"/>
				<Argument Name="action" IsMandatory="true">
					<Type VariantType="String"/>
					<Description>The requested action. One of DragManager.COPY, DragManager.LINK, DragManager.MOVE, DragManager.NONE.</Description>
				</Argument>
				<Argument Name="draggedItem" IsMandatory="false" DefaultValue="">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the dragged item is dropped.</Description>
			</Operation>
			<Operation Name="DragStart" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragStart"/>
				<Argument Name="draggedItem" IsMandatory="false">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the drag/drop operation begins.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="MouseScroll" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseWheel"/>
				<Argument Name="delta" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The amount to scroll.</Description>
				</Argument>
				<Description>Dispatched when the mouse is used to move the scroll bars on this container.</Description>
			</Operation>
			<Operation ExposureLevel="CommonUsed" Name="Scroll" PropertyType="Method">
				<Implementation Class="mx.events::ScrollEvent" Type="scroll"/>
				<Argument Name="position" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The new scroll position.</Description>
				</Argument>
				<Argument Name="direction" IsMandatory="true">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDirectionValues" Codec="scrollDirection"/>
					<Description>The direction of motion: ScrollEventDirection.VERTICAL or ScrollEventDirection.HORIZONTAL.</Description>
				</Argument>
				<Argument Name="detail" IsMandatory="true" DefaultValue="null">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDetailValues" Codec="scrollDetail"/>
					<Description>Provides the details of the scroll activity. For most scroll activities the value is one of the listed constants, such as THUMB_TRACK. If the event indicates that the scrollbar has moved up, down, left, or right, the value is the string concatenation of the amount of motion (such as "Line" or "Page") and the constant that indicates the direction, such as LEFT.</Description>
				</Argument>
				<Description>Dispatched when the container's scroll events occur. This event is dispatched if the scrolling is done programmatically or by the user.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="backgroundAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Level of transparency of the SWF file or image defined by backgroundImage, or the color defined by the backgroundColor property.</Description>
			</Property>
			<Property Name="backgroundColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container.</Description>
			</Property>
			<Property Name="backgroundDisabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container when disabled.</Description>
			</Property>
			<Property Name="backgroundImage" ForVerification="true">
				<Type VariantType="String" Codec="asset"/>
				<Description>Background image of the container.</Description>
			</Property>
			<Property Name="backgroundSize" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Scales the image specified by backgroundImage to different percentage sizes.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="creationIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>The order in which to instantiate and draw the children of the container.</Description>
			</Property>
			<Property Name="creationPolicy" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Policy for creating this Container's children. Possible values include "auto", "all", "none", and "queued".</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls. The default value is [60,40].</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the font to use. The default value is Verdana.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Height of the text, in pixels. The default value is 10.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The text displayed by some navigator containers to represent this container.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="numChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of components that are children of this object.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	<ClassInfo Name="FlexAccordion" GenericTypeID="frame" Extends="FlexContainer" SupportsTabularData="true">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="235"/>
		<Description>FlexAccordion</Description>
		<Implementation Class="mx.containers::Accordion"/>
		<TypeInfo>
			<Operation Name="Change" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.events::IndexChangedEvent" Type="change"/>
				<Argument Name="relatedObject" IsMandatory="true" DefaultValue="mouse">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The child object that was actually interacted with.</Description>
				</Argument>
				<Description>Dispatched when the selected accordion pane changes.</Description>
			</Operation>
			<Operation Name="ChangeIndex" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.events::IndexChangedEvent" Type="changeIndex"/>
				<Argument Name="newIndex" IsMandatory="true" DefaultValue="mouse">
					<Type VariantType="int"/>
					<Description>The child object that was actually interacted with.</Description>
				</Argument>
				<Description>Dispatched when the selected accordion pane changes.</Description>
			</Operation>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="DragCancel" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragComplete"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when a drag operation is cancelled.</Description>
			</Operation>
			<Operation Name="DragDrop" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragDrop"/>
				<Argument Name="action" IsMandatory="true">
					<Type VariantType="String"/>
					<Description>The requested action. One of DragManager.COPY, DragManager.LINK, DragManager.MOVE, DragManager.NONE.</Description>
				</Argument>
				<Argument Name="draggedItem" IsMandatory="false" DefaultValue="">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the dragged item is dropped.</Description>
			</Operation>
			<Operation Name="DragStart" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragStart"/>
				<Argument Name="draggedItem" IsMandatory="false">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the drag/drop operation begins.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="MouseScroll" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseWheel"/>
				<Argument Name="delta" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The amount to scroll.</Description>
				</Argument>
				<Description>Dispatched when the mouse is used to move the scroll bars on this container.</Description>
			</Operation>
			<Operation ExposureLevel="CommonUsed" Name="Scroll" PropertyType="Method">
				<Implementation Class="mx.events::ScrollEvent" Type="scroll"/>
				<Argument Name="position" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The new scroll position.</Description>
				</Argument>
				<Argument Name="direction" IsMandatory="true">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDirectionValues" Codec="scrollDirection"/>
					<Description>The direction of motion: ScrollEventDirection.VERTICAL or ScrollEventDirection.HORIZONTAL.</Description>
				</Argument>
				<Argument Name="detail" IsMandatory="true" DefaultValue="null">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDetailValues" Codec="scrollDetail"/>
					<Description>Provides the details of the scroll activity. For most scroll activities the value is one of the listed constants, such as THUMB_TRACK. If the event indicates that the scrollbar has moved up, down, left, or right, the value is the string concatenation of the amount of motion (such as "Line" or "Page") and the constant that indicates the direction, such as LEFT.</Description>
				</Argument>
				<Description>Dispatched when the container's scroll events occur. This event is dispatched if the scrolling is done programmatically or by the user.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="backgroundAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Level of transparency of the SWF file or image defined by backgroundImage, or the color defined by the backgroundColor property.</Description>
			</Property>
			<Property Name="backgroundColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container.</Description>
			</Property>
			<Property Name="backgroundDisabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container when disabled.</Description>
			</Property>
			<Property Name="backgroundImage" ForVerification="true">
				<Type VariantType="String" Codec="asset"/>
				<Description>Background image of the container.</Description>
			</Property>
			<Property Name="backgroundSize" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Scales the image specified by backgroundImage to different percentage sizes.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="creationIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>The order in which to instantiate and draw the children of the container.</Description>
			</Property>
			<Property Name="creationPolicy" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Policy for creating this Container's children. Possible values include "auto", "all", "none", and "queued".</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls. The default value is [60,40].</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the font to use. The default value is Verdana.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Height of the text, in pixels. The default value is 10.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="headerHeight" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Height of each Accordion header, in pixels. The default value is 22.</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="horizontalGap" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number of pixels between children in the horizontal direction.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The text displayed by some navigator containers to represent this container.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="numChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of components that are children of this object.</Description>
			</Property>
			<Property Name="paddingBottom" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number of pixels between the container's bottom border and its content area.</Description>
			</Property>
			<Property Name="paddingTop" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number of pixels between the container's top border and its content area.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selectedChild" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="String" Codec="automationObject"/>
				<Description>A reference to the currently visible child container.</Description>
			</Property>
			<Property Name="selectedIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>The zero-based index of the currently visible child container.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of selected text.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="verticalGap" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number of pixels between children in the vertical direction.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>

	<ClassInfo Name="FlexBox" GenericTypeID="frame" Extends="FlexContainer" SupportsTabularData="true">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="241"/>
		<Description>FlexBox</Description>
		<Implementation Class="mx.containers::Box"/>
		<Implementation Class="mx.containers::Tile"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="DragCancel" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragComplete"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when a drag operation is cancelled.</Description>
			</Operation>
			<Operation Name="DragDrop" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragDrop"/>
				<Argument Name="action" IsMandatory="true">
					<Type VariantType="String"/>
					<Description>The requested action. One of DragManager.COPY, DragManager.LINK, DragManager.MOVE, DragManager.NONE.</Description>
				</Argument>
				<Argument Name="draggedItem" IsMandatory="false" DefaultValue="">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the dragged item is dropped.</Description>
			</Operation>
			<Operation Name="DragStart" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragStart"/>
				<Argument Name="draggedItem" IsMandatory="false">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the drag/drop operation begins.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="MouseScroll" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseWheel"/>
				<Argument Name="delta" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The amount to scroll.</Description>
				</Argument>
				<Description>Dispatched when the mouse is used to move the scroll bars on this container.</Description>
			</Operation>
			<Operation ExposureLevel="CommonUsed" Name="Scroll" PropertyType="Method">
				<Implementation Class="mx.events::ScrollEvent" Type="scroll"/>
				<Argument Name="position" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The new scroll position.</Description>
				</Argument>
				<Argument Name="direction" IsMandatory="true">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDirectionValues" Codec="scrollDirection"/>
					<Description>The direction of motion: ScrollEventDirection.VERTICAL or ScrollEventDirection.HORIZONTAL.</Description>
				</Argument>
				<Argument Name="detail" IsMandatory="true" DefaultValue="null">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDetailValues" Codec="scrollDetail"/>
					<Description>Provides the details of the scroll activity. For most scroll activities the value is one of the listed constants, such as THUMB_TRACK. If the event indicates that the scrollbar has moved up, down, left, or right, the value is the string concatenation of the amount of motion (such as "Line" or "Page") and the constant that indicates the direction, such as LEFT.</Description>
				</Argument>
				<Description>Dispatched when the container's scroll events occur. This event is dispatched if the scrolling is done programmatically or by the user.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="backgroundAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Level of transparency of the SWF file or image defined by backgroundImage, or the color defined by the backgroundColor property.</Description>
			</Property>
			<Property Name="backgroundColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container.</Description>
			</Property>
			<Property Name="backgroundDisabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container when disabled.</Description>
			</Property>
			<Property Name="backgroundImage" ForVerification="true">
				<Type VariantType="String" Codec="asset"/>
				<Description>Background image of the container.</Description>
			</Property>
			<Property Name="backgroundSize" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Scales the image specified by backgroundImage to different percentage sizes.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="creationIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>The order in which to instantiate and draw the children of the container.</Description>
			</Property>
			<Property Name="creationPolicy" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Policy for creating this Container's children. Possible values include "auto", "all", "none", and "queued".</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="direction" ForVerification="true" ForDefaultVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the Box lays out its children horizontally or vertically.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls. The default value is [60,40].</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the font to use. The default value is Verdana.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Height of the text, in pixels. The default value is 10.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="horizontalAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Horizontal alignment of children in the container.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The text displayed by some navigator containers to represent this container.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="numChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of components that are children of this object.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="verticalAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Vertical alignment of children in the container.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>

	<ClassInfo Name="FlexButton" GenericTypeID="button" Extends="FlexObject" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="2"/>
		<Description>FlexButton</Description>
		<Implementation Class="mx.controls::Button"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Orientation of the label in relation to a specified icon. Valid values are right, left, bottom, and top.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>


	<ClassInfo Name="FlexCanvas" GenericTypeID="frame" Extends="FlexContainer" SupportsTabularData="true">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="237"/>
		<Description>FlexCanvas</Description>
		<Implementation Class="mx.containers::Canvas"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="DragCancel" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragComplete"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when a drag operation is cancelled.</Description>
			</Operation>
			<Operation Name="DragDrop" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragDrop"/>
				<Argument Name="action" IsMandatory="true">
					<Type VariantType="String"/>
					<Description>The requested action. One of DragManager.COPY, DragManager.LINK, DragManager.MOVE, DragManager.NONE.</Description>
				</Argument>
				<Argument Name="draggedItem" IsMandatory="false" DefaultValue="">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the dragged item is dropped.</Description>
			</Operation>
			<Operation Name="DragStart" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::AutomationDragEvent" Type="dragStart"/>
				<Argument Name="draggedItem" IsMandatory="false">
					<Type VariantType="String" Codec="automationObject"/>
					<Description>The object being dragged.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the drag/drop operation begins.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="MouseScroll" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseWheel"/>
				<Argument Name="delta" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The amount to scroll.</Description>
				</Argument>
				<Description>Dispatched when the mouse is used to move the scroll bars on this container.</Description>
			</Operation>
			<Operation ExposureLevel="CommonUsed" Name="Scroll" PropertyType="Method">
				<Implementation Class="mx.events::ScrollEvent" Type="scroll"/>
				<Argument Name="position" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The new scroll position.</Description>
				</Argument>
				<Argument Name="direction" IsMandatory="true">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDirectionValues" Codec="scrollDirection"/>
					<Description>The direction of motion: ScrollEventDirection.VERTICAL or ScrollEventDirection.HORIZONTAL.</Description>
				</Argument>
				<Argument Name="detail" IsMandatory="true" DefaultValue="null">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDetailValues" Codec="scrollDetail"/>
					<Description>Provides the details of the scroll activity. For most scroll activities the value is one of the listed constants, such as THUMB_TRACK. If the event indicates that the scrollbar has moved up, down, left, or right, the value is the string concatenation of the amount of motion (such as "Line" or "Page") and the constant that indicates the direction, such as LEFT.</Description>
				</Argument>
				<Description>Dispatched when the container's scroll events occur. This event is dispatched if the scrolling is done programmatically or by the user.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="backgroundAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Level of transparency of the SWF file or image defined by backgroundImage, or the color defined by the backgroundColor property.</Description>
			</Property>
			<Property Name="backgroundColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container.</Description>
			</Property>
			<Property Name="backgroundDisabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the container when disabled.</Description>
			</Property>
			<Property Name="backgroundImage" ForVerification="true">
				<Type VariantType="String" Codec="asset"/>
				<Description>Background image of the container.</Description>
			</Property>
			<Property Name="backgroundSize" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Scales the image specified by backgroundImage to different percentage sizes.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="creationIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>The order in which to instantiate and draw the children of the container.</Description>
			</Property>
			<Property Name="creationPolicy" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Policy for creating this Container's children. Possible values include "auto", "all", "none", and "queued".</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls. The default value is [60,40].</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the font to use. The default value is Verdana.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Height of the text, in pixels. The default value is 10.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The text displayed by some navigator containers to represent this container.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="numChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of components that are children of this object.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>



	<ClassInfo Name="FlexCheckBox" GenericTypeID="checkbox" Extends="FlexButton" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="204"/>
		<Description>FlexCheckBox</Description>
		<Implementation Class="mx.controls::CheckBox"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Orientation of the label in relation to a specified icon. Valid values are right, left, bottom, and top.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	
	<ClassInfo Name="FlexDisplayObject" GenericTypeID="object" Extends="" SupportsTabularData="false">
		<Description>FlexDisplayObject</Description>
		<Implementation Class="flash.display::DisplayObject"/>
		<TypeInfo>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>

	<ClassInfo Name="FlashMovieClip" GenericTypeID="object" Extends="" SupportsTabularData="false">
		<Description>FlashMovieClip</Description>
		<Implementation Class="flash.display::MovieClip"/>
		<TypeInfo>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>


	<ClassInfo Name="FlashNumericStepper" GenericTypeID="spin" Extends="FlexNumericStepper" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="221"/>
		<Description>Scroll Bar</Description>
		<Implementation Class="fl.controls::NumericStepper"/>
		<TypeInfo>
			<Operation Name="Change" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.events::NumericStepperEvent" Type="change"/>
				<Argument Name="value" IsMandatory="true">
					<Type VariantType="VT_R8"/>
					<Description>The value of the NumericStepper when the change occured.</Description>
				</Argument>
				<Description>Dispatched when the value of the NumericStepper changes as a result of user interaction.</Description>
			</Operation>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="Input" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::TextEvent" Type="textInput"/>
				<Argument Name="text" IsMandatory="true">
					<Type VariantType="String"/>
					<Description>The character or sequence of characters entered by the user.</Description>
				</Argument>
				<Description>Dispatched when the user types, deletes, or pastes text into the control.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SelectText" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::TextSelectionEvent" Type="textSelectionChange"/>
				<Argument Name="beginIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the first selected character.</Description>
				</Argument>
				<Argument Name="endIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the last selected character.</Description>
				</Argument>
				<Description>Dispatched when text is selected.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="Integer" Codec="color"/>
				<Description>Text color of a component label. The default value is 0x0B333C.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled. The default value is 0xAAB3B3.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control. The default value is [0xE6EEEE,0xFFFFFF].</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the font to use. Any font family name can be used. The default value is Verdana.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Height of the text in pixels. The default value is 10.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the text is oblique or not. Valid values are "normal" and "italic". The default is "normal".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the text is bold or not. Recognized values are "normal" and "bold". The default is "normal".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="maximum" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The minimum value of the stepper.</Description>
			</Property>
			<Property Name="minimum" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The maximum value of the stepper.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="nextValue" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The value that is one step larger than the current value.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="previousValue" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The value that is one step smaller than the current value.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="stepSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The unit of change between values.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within a container. Valid values are "left", "right", or "center". The default value is "left".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not. Valid values are "none" and "underline". The default value is "none".</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Offset of first line of text from the left side of the container. The default value is 0.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="value" ForVerification="true" ForDefaultVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Current value displayed in the text area of the NumericStepper control.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>


	<ClassInfo Name="FlashButton" GenericTypeID="button" Extends="FlashLabelButton" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="2"/>
		<Description>FlashButton</Description>
		<Implementation Class="fl.controls::Button"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Orientation of the label in relation to a specified icon. Valid values are right, left, bottom, and top.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>

	<ClassInfo Name="FlashLabelButton" GenericTypeID="button" Extends="FlashBaseButton" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="2"/>
		<Description>FlashLabelButton</Description>
		<Implementation Class="fl.controls::LabelButton"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Orientation of the label in relation to a specified icon. Valid values are right, left, bottom, and top.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>

	<ClassInfo Name="FlashBaseButton" GenericTypeID="button" Extends="FlashObject" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="2"/>
		<Description>FlashBaseButton</Description>
		<Implementation Class="fl.controls::BaseButton"/>
		<Implementation Class="flash.display::SimpleButton"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Orientation of the label in relation to a specified icon. Valid values are right, left, bottom, and top.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	<ClassInfo Name="FlashTextArea" GenericTypeID="edit" Extends="FlashObject" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="228"/>
		<Description>FlexTextArea</Description>
		<Implementation Class="fl.controls::TextArea"/>
		<Implementation Class="fl.controls::TextInput"/>
		<Implementation Class="flash.text::TextField"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="Input" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::TextEvent" Type="textInput"/>
				<Argument Name="text" IsMandatory="true">
					<Type VariantType="String"/>
					<Description>The character or sequence of characters entered by the user.</Description>
				</Argument>
				<Description>Dispatched when the user types, deletes, or pastes text into the control.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="MouseScroll" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseWheel"/>
				<Argument Name="delta" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The amount to scroll.</Description>
				</Argument>
				<Description>Dispatched when the mouse is used to move the scroll bars on this container.</Description>
			</Operation>
			<Operation Name="Scroll" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.events::ScrollEvent" Type="scroll"/>
				<Argument Name="position" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The new scroll position.</Description>
				</Argument>
				<Argument Name="direction" IsMandatory="true">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDirectionValues" Codec="scrollDirection"/>
					<Description>The direction of motion: ScrollEventDirection.VERTICAL or ScrollEventDirection.HORIZONTAL.</Description>
				</Argument>
				<Argument Name="detail" IsMandatory="true" DefaultValue="null">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDetailValues" Codec="scrollDetail"/>
					<Description>Provides the details of the scroll activity. For most scroll activities the value is one of the listed constants, such as THUMB_TRACK. If the event indicates that the scrollbar has moved up, down, left, or right, the value is the string concatenation of the amount of motion (such as "Line" or "Page") and the constant that indicates the direction, such as LEFT.</Description>
				</Argument>
				<Description>Dispatched when the content is scrolled.</Description>
			</Operation>
			<Operation Name="SelectText" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::TextSelectionEvent" Type="textSelectionChange"/>
				<Argument Name="beginIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the first character selected.</Description>
				</Argument>
				<Argument Name="endIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the last character selected.</Description>
				</Argument>
				<Description>Dispatched when text is selected.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="Integer" Codec="color"/>
				<Description>Text color of a component label. The default value is 0x0B333C.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Disabled color of the TextArea.</Description>
			</Property>
			<Property Name="displayAsPassword" ForDescription="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether the text field is a password text field.</Description>
			</Property>
			<Property Name="editable" ForDescription="true">
				<Type VariantType="Boolean"/>
				<Description>If true, the user can edit the text.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the font to use.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Height of the text, in pixels.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="horizontalScrollPolicy" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the horizontal scroll bar is always on (ScrollPolicy.ON), always off (ScrollPolicy.OFF), or turns on when needed (ScrollPolicy.AUTO).</Description>
			</Property>
			<Property Name="htmlText" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Contains HTML formatted text.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="length" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Length of text in the TextArea.</Description>
			</Property>
			<Property Name="maxChars" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Maximum number of characters that users can enter in the text field.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="restrict" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Set of characters that a user can enter into the text field.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selection" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The selected text.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="text" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text string that appears in the control.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="wordWrap" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>If true, the text wraps.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	<ClassInfo Name="FlashListLabel" GenericTypeID="text_label" Extends="FlashObject" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="215"/>
		<Description>FlashListLabel</Description>
		<Implementation Class="fl.controls.listClasses::CellRenderer"/>
		<TypeInfo>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="automationValue" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>A value which can be used to uniquely identify this item.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	<ClassInfo Name="FlashComboBox" GenericTypeID="list" Extends="FlashObject" SupportsTabularData="true">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="206"/>
		<Description>FlashComboBox</Description>
		<Implementation Class="fl.controls::ComboBox"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="Close" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::Event" Type="close"/>
				<Argument Name="triggerEvent" IsMandatory="false" DefaultValue="1">
					<Type VariantType="Enumeration" ListOfValuesName="FlexTriggerEventValues" Codec="event"/>
					<Description>Whether the event was triggered by mouse or keyboard.</Description>
				</Argument>
				<Description>Dispatched when the drop-down list is dismissed for any reason such when the user selects an item in the list, clicks outside of the list, clicks the drop-down button while the list is displayed, or presses the ESC key while the list is displayed.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="GetItemsCount" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getItemsCount"/>
				<Description>Returns the number of items in the ComboBox.</Description>
			</Operation>
			<Operation Name="Input" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::TextEvent" Type="textInput"/>
				<Argument Name="text" IsMandatory="true">
					<Type VariantType="String"/>
					<Description>The text entered by the user..</Description>
				</Argument>
				<Description>Dispatched when the user types, deletes, or pastes text into the control.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="Open" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::Event" Type="open"/>
				<Description>Dispatched when the user clicks the drop-down button to display the drop-down list.</Description>
			</Operation>
			<Operation Name="Scroll" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.events::ScrollEvent" Type="scroll"/>
				<Argument Name="position" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The new scroll position.</Description>
				</Argument>
				<Argument Name="direction" IsMandatory="true">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDirectionValues" Codec="scrollDirection"/>
					<Description>The direction of motion: ScrollEventDirection.VERTICAL or ScrollEventDirection.HORIZONTAL.</Description>
				</Argument>
				<Argument Name="detail" IsMandatory="true" DefaultValue="null">
					<Type VariantType="Enumeration" ListOfValuesName="FlexScrollDetailValues" Codec="scrollDetail"/>
					<Description>Provides the details of the scroll activity. For most scroll activities the value is one of the listed constants, such as THUMB_TRACK. If the event indicates that the scrollbar has moved up, down, left, or right, the value is the string concatenation of the amount of motion (such as "Line" or "Page") and the constant that indicates the direction, such as LEFT.</Description>
				</Argument>
				<Description>Dispatched when the user scrolls the control's drop-down list.</Description>
			</Operation>
			<Operation Name="Select" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::ListItemSelectEvent" Type="select"/>
				<Argument Name="itemRenderer" IsMandatory="true">
					<Type VariantType="String" Codec="rendererObject"/>
					<Description>The selected item.</Description>
				</Argument>
				<Argument Name="triggerEvent" IsMandatory="false" DefaultValue="1">
					<Type VariantType="Enumeration" ListOfValuesName="FlexTriggerEventValues" Codec="event"/>
					<Description>Whether the event was triggered by mouse or keyboard.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user selects an item in the ComboBox.</Description>
			</Operation>
			<Operation Name="SelectIndex" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::ListItemSelectEvent" Type="selectIndex"/>
				<Argument Name="itemIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The data provider index of the selected item</Description>
				</Argument>
				<Argument Name="triggerEvent" IsMandatory="false" DefaultValue="1">
					<Type VariantType="Enumeration" ListOfValuesName="FlexTriggerEventValues" Codec="event"/>
					<Description>Whether the event was triggered by mouse or keyboard.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user clicks on an item in the ComboBox or navigates to the item using the keyboard.</Description>
			</Operation>
			<Operation Name="SelectText" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="mx.automation.events::TextSelectionEvent" Type="textSelectionChange"/>
				<Argument Name="beginIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the first character in the selection.</Description>
				</Argument>
				<Argument Name="endIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the last character in the selection.</Description>
				</Argument>
				<Description>Dispatched when text is selected.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="alternatingRowColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors for rows in an alternating pattern. Value can be an Array of two of more colors.</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="backgroundAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha level of the SWF file or image defined by backgroundImage, or the color defined by the backgroundColor property. Valid values range from 0 to 1.0. The default value is 1.0.</Description>
			</Property>
			<Property Name="backgroundColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Background color of the component.</Description>
			</Property>
			<Property Name="backgroundImage" ForVerification="true">
				<Type VariantType="String" Codec="asset"/>
				<Description>Background image of a control.</Description>
			</Property>
			<Property Name="backgroundSize" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Scales the image specified by backgroundImage to different percentage sizes. A value of "100%" stretches the image to fit the entire screen. The default value is "auto", which maintains the original size of the image.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="Integer" Codec="color"/>
				<Description>Text color of a component label. The default value is 0x0B333C.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled. The default value is 0xAAB3B3.</Description>
			</Property>
			<Property Name="dropShadowEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Boolean property that controls the visibility of the component's drop shadow. This style must be used with borderStyle="solid". The default value is false.</Description>
			</Property>
			<Property Name="editable" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Whether the user can enter text into the ComboBox.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls. The default value is [60,40].</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the font to use. Any font family name can be used. The default value is Verdana.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Height of the text in pixels. The default value is 10.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the text is oblique or not. Valid values are "normal" and "italic". The default is "normal".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the text is bold or not. Recognized values are "normal" and "bold". The default is "normal".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="highlightColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the control border highlight. The default value is 0xC4CCCC (medium gray).</Description>
			</Property>
			<Property Name="horizontalScrollPolicy" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the horizontal scroll bar is always present, always absent, or automatically added when needed.</Description>
			</Property>
			<Property Name="horizontalScrollPosition" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>The current position of the horizontal scroll bar.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="liveScrolling" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines whether scrolling is "live" as the thumb is moved or the view is not updated until the thumb is released.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="restrict" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Characters that user cannot enter into the object's text field.</Description>
			</Property>
			<Property Name="rollOverColor" ForVerification="true">
				<Type VariantType="Boolean" Codec="color"/>
				<Description>Color of the background when the user rolls over an item.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selectedIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Index of the selected item in the drop-down list.</Description>
			</Property>
			<Property Name="selectionColor" ForVerification="true">
				<Type VariantType="Boolean" Codec="color"/>
				<Description>Color of the background when the user selects an item.</Description>
			</Property>
			<Property Name="showScrollTips" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines whether a ToolTip should appear near the scroll thumb when it is being dragged.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="text" ForVerification="true" ForDefaultVerification="true">
				<Type VariantType="String"/>
				<Description>The current text displayed by the ComboBox.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within a container. Valid values are "left", "right", or "center". The default value is "left".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not. Valid values are "none" and "underline". The default value is "none".</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Offset of first line of text from the left side of the container. The default value is 0.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="verticalScrollPolicy" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Whether the vertical scroll bar is always present, always absent, or automatically added when needed.</Description>
			</Property>
			<Property Name="verticalScrollPosition" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>The current position of the vertical scroll bar.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	<ClassInfo Name="FlashRadioButton" GenericTypeID="radiobutton" Extends="FlashLabelButton" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="223"/>
		<Description>FlashRadioButton</Description>
		<Implementation Class="fl.controls::RadioButton"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="groupName" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Name of the button group to which the radio button belongs.</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Position of the label relative to the RadioButton icon.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	<ClassInfo Name="FlashCheckBox" GenericTypeID="checkbox" Extends="FlashLabelButton" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="204"/>
		<Description>FlashCheckBox</Description>
		<Implementation Class="fl.controls::CheckBox"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Orientation of the label in relation to a specified icon. Valid values are right, left, bottom, and top.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
	<ClassInfo Name="FlashObject" GenericTypeID="object" Extends="FlexDisplayObject" SupportsTabularData="false">
		<Description>FlashObject</Description>
		<Implementation Class="fl.core::UIComponent"/>
		<TypeInfo>
			<Operation ExposureLevel="CommonUsed" Name="ChangeFocus" PropertyType="Method">
				<Implementation Class="flash.events::FocusEvent" Type="keyFocusChange"/>
				<Argument Name="shiftKey" IsMandatory="false" DefaultValue="false">
					<Type VariantType="Boolean"/>
					<Description>True if the user held the Shift key down when changing focus. Otherwise false.</Description>
				</Argument>
				<Argument Name="keyCode" IsMandatory="false" DefaultValue="TAB">
					<Type VariantType="String" Codec="keyCode"/>
					<Description>The key code value of the key pressed to trigger a ChangeFocus event.</Description>
				</Argument>
				<Description>Dispatched when the focus changes from object to another.</Description>
			</Operation>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="enabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>

	<ClassInfo Name="FlashDisplayObject" GenericTypeID="button" Extends="FlexObject" SupportsTabularData="false">
		<IconInfo IconFile="TEAPluginQTP.dll" IconIndex="2"/>
		<Description>GenericDisplayObject</Description>
		<Implementation Class="com.adobe.genie::DisplayObject"/>
		<Implementation Class="flash.display::Sprite"/>
		<Implementation Class="flash.display::Shape"/>
		<Implementation Class="flash.display::MovieClip"/>
		<TypeInfo>
			<Operation Name="Click" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="click"/>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>

			<Operation Name="ClickAtLocation" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="ClickAtLocation"/>
				<Argument Name="localX" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>

				<Argument Name="stageX" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Argument Name="stageY" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>

				<Argument Name="stageWidth" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Argument Name="stageHeight" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>

				<Argument Name="delta" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>
			<Operation Name="DoubleClickAtLocation" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="DoubleClickAtLocation"/>
				<Argument Name="localX" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="true" DefaultValue="0">
					<Type VariantType="Number" ListOfValuesName="FlexKeyModifierValues" Codec="object"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse is clicked while over this object.</Description>
			</Operation>

			<Operation Name="GetAutomationChildAt" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="getAutomationChildAt"/>
				<Argument Name="childIndex" IsMandatory="true">
					<Type VariantType="Integer"/>
					<Description>The index of the child.</Description>
				</Argument>
				<ReturnValueType>
					<Type VariantType="TEAObject"/>
				</ReturnValueType>
				<Description>Returns the child component at given index.</Description>
			</Operation>
			<Operation Name="MouseMove" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::MouseEvent" Type="mouseMove"/>
				<Argument Name="localX" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The x position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="localY" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Integer"/>
					<Description>The y position to move the mouse relative to this object.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the mouse moves while over this object.</Description>
			</Operation>
			<Operation Name="SetFocus" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Type="setFocus"/>
				<Description>Sets focus to the component.</Description>
			</Operation>
			<Operation Name="Type" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPress"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>

			<!--KeyBoardSupport-->
			<Operation Name="performKeyAction" PropertyType="Method" ExposureLevel="CommonUsed">
				<Implementation Class="flash.events::KeyboardEvent" Type="keyPressForDuration"/>
				<Argument Name="keyCode" IsMandatory="true">
					<Type VariantType="String" Codec="keyCode" DefaultValue="SPACE"/>
					<Description>The key code value of the key pressed.</Description>
				</Argument>
				<Argument Name="keyModifier" IsMandatory="false" DefaultValue="0">
					<Type VariantType="Enumeration" ListOfValuesName="FlexKeyModifierValues" Codec="keyModifier"/>
					<Description>A constant that indicates which key or key combination, if any, was pressed while this operation took place.</Description>
				</Argument>
				<Description>Dispatched when the user presses a key.</Description>
			</Operation>
		</TypeInfo>
		<Properties>
			<Property Name="alpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The level of transparency for this object. The range of valid values is 0 (completely transparent) to 1 (completely opaque).</Description>
			</Property>
			<Property Name="automationClassName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The class name as it is known in QTP. For example, FlexButton.</Description>
			</Property>
			<Property Name="automationIndex" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The object's index relative to its parent.</Description>
			</Property>
			<Property Name="automationName" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The name used by the automation system to identify an object.</Description>
			</Property>
			<Property Name="className" ForDescription="true">
				<Type VariantType="String"/>
				<Description>The fully-qualified path in the Flex class library; for example, mx.controls.Button.</Description>
			</Property>
			<Property Name="color" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of a component label.</Description>
			</Property>
			<Property Name="currentState" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The current state of the object.</Description>
			</Property>
			<Property Name="disabledColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the component if it is disabled.</Description>
			</Property>
			<Property Name="enabled" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the user can interact with the specified object.</Description>
			</Property>
			<Property Name="errorColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Color of the error text.</Description>
			</Property>
			<Property Name="errorString" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text that will be displayed in case of a validation error.</Description>
			</Property>
			<Property Name="fillAlphas" ForVerification="true">
				<Type VariantType="String" Codec="object[]"/>
				<Description>Alphas used for the background fill of controls.</Description>
			</Property>
			<Property Name="fillColors" ForVerification="true">
				<Type VariantType="String" Codec="color[]"/>
				<Description>Colors used to tint the background of the control. Pass the same color for both values for a "flat" looking control.</Description>
			</Property>
			<Property Name="focusAlpha" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Alpha value of the focus skin.</Description>
			</Property>
			<Property Name="focusEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object can receive focus when clicked on.</Description>
			</Property>
			<Property Name="fontFamily" ForVerification="true">
				<Type VariantType="String"/>
				<Description>The font family name used for the label.</Description>
			</Property>
			<Property Name="fontSize" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The font size used for the label.</Description>
			</Property>
			<Property Name="fontStyle" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies the obliqueness of the text. Possible values are "normal" and "italic".</Description>
			</Property>
			<Property Name="fontWeight" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Specifies whether the text is bold or not. Possible values are "normal" and "bold".</Description>
			</Property>
			<Property Name="height" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The height, in pixels, of this object.</Description>
			</Property>
			<Property Name="id" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Developer-assigned ID.</Description>
			</Property>
			<Property Name="label" ForDefaultVerification="true" ForDescription="true" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to appear on the Button.</Description>
			</Property>
			<Property Name="labelPlacement" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Orientation of the label in relation to a specified icon. Valid values are right, left, bottom, and top.</Description>
			</Property>
			<Property Name="mouseEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object receives mouse messages.</Description>
			</Property>
			<Property Name="numAutomationChildren" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>Number of automation children.</Description>
			</Property>
			<Property Name="percentHeight" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the height of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="percentWidth" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the width of an object as a percentage of its parent's size.</Description>
			</Property>
			<Property Name="scaleX" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the horizontal scaling percentage.</Description>
			</Property>
			<Property Name="scaleY" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Number that specifies the vertical scaling percentage.</Description>
			</Property>
			<Property Name="selected" ForDefaultVerification="true" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether a toggle button is toggled on (true) or off (false).</Description>
			</Property>
			<Property Name="tabChildren" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Determines if the children of the object are tab enabled.</Description>
			</Property>
			<Property Name="tabEnabled" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Specifies whether this object is in the tab order.</Description>
			</Property>
			<Property Name="tabIndex" ForVerification="true">
				<Type VariantType="Integer"/>
				<Description>If tabEnabled, the order in which this object receives focus when the user cycles through objects with the Tab key.</Description>
			</Property>
			<Property Name="textAlign" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Alignment of text within the button. Valid values are "left", "right", or "center". The default value is "center".</Description>
			</Property>
			<Property Name="textDecoration" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Determines whether the text is underlined or not.</Description>
			</Property>
			<Property Name="textIndent" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Offset of first line of text from the left side of the container.</Description>
			</Property>
			<Property Name="textRollOverColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you move the mouse pointer over the button.</Description>
			</Property>
			<Property Name="textSelectedColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Text color of the label as you press it.</Description>
			</Property>
			<Property Name="themeColor" ForVerification="true">
				<Type VariantType="String" Codec="color"/>
				<Description>Theme color of an object.</Description>
			</Property>
			<Property Name="toggle" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Is this Button a toggle button or a momentary one.</Description>
			</Property>
			<Property Name="toolTip" ForVerification="true">
				<Type VariantType="String"/>
				<Description>Text to display in the ToolTip.</Description>
			</Property>
			<Property Name="useHandCursor" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>A Boolean value that indicates whether the pointing hand (hand cursor) appears when the mouse rolls over an object.</Description>
			</Property>
			<Property Name="visible" ForVerification="true">
				<Type VariantType="Boolean"/>
				<Description>Indicates whether the object is visible.</Description>
			</Property>
			<Property Name="width" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>The width, in pixels, of this object.</Description>
			</Property>
			<Property Name="x" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's horizontal position, in pixels, within its parent container.</Description>
			</Property>
			<Property Name="y" ForVerification="true">
				<Type VariantType="VT_R8"/>
				<Description>Specifies the object's vertical position, in pixels, within its parent container.</Description>
			</Property>
		</Properties>
	</ClassInfo>
</TypeInformation>